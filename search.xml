<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>upload-labs</title>
      <link href="/2024/06/17/upload-labs/"/>
      <url>/2024/06/17/upload-labs/</url>
      
        <content type="html"><![CDATA[<h1 id="upload-labs"><a href="#upload-labs" class="headerlink" title="upload-labs"></a>upload-labs</h1><p>使用工具：<br>burpsuite<br>中国蚁剑</p><h2 id="Pass-01-前端js绕过"><a href="#Pass-01-前端js绕过" class="headerlink" title="Pass-01 前端js绕过"></a>Pass-01 前端js绕过</h2><blockquote><p>前端JS代码对上传文件合法性的验证</p></blockquote><ol><li>先上传一个不合法php文件来测试</li></ol><p><img src="https://pic.imgdb.cn/item/666fe4a3d9c307b7e9085db1.png"></p><p><img src="https://pic.imgdb.cn/item/666fdd20d9c307b7e9fa577e.png"></p><ol start="2"><li>该文件类型不允许上传</li></ol><p><img src="https://pic.imgdb.cn/item/666fdd5dd9c307b7e9fabe43.png"></p><ol start="3"><li>burpsuite未抓到包，则证明上传的文件在前端就被拦截，还未到传给服务器的步骤</li></ol><img src="https://pic.imgdb.cn/item/666fde6ad9c307b7e9fc8a34.png" style="zoom:67%;"><ol start="4"><li>他只允许图片（jpg、png）及动图（gif）文件上传，那么我们就将文件改为图片的后缀来上传，从而绕过前端的拦截</li></ol><p><img src="https://pic.imgdb.cn/item/666fdf36d9c307b7e9ff1840.png"></p><ol start="5"><li>能抓到包，证明绕过了前端验证</li></ol><p><img src="https://pic.imgdb.cn/item/666fe4d3d9c307b7e908b3fd.png"></p><ol start="6"><li>然后将文件后缀名从jpg重新改回php上传，一句话木马就植入服务器了，这里看到打开图片连接，实际上是php文件</li></ol><p><img src="https://pic.imgdb.cn/item/666fe50fd9c307b7e9092267.png"></p><ol start="7"><li>可以用后门连接工具（蚁剑）来连接并控制服务器，输入url和连接密码（也就是post传入的参数）</li></ol><p><img src="https://pic.imgdb.cn/item/666fe546d9c307b7e909882e.png"></p><ol start="8"><li>连接成功，并添加，打开数据记录就可以控制服务器目录</li></ol><p><img src="https://pic.imgdb.cn/item/666fe5fed9c307b7e90ace82.png"></p><ol start="9"><li>可以对服务器的目录进行操作，此处演示删除操作</li></ol><p><img src="https://pic.imgdb.cn/item/666fe642d9c307b7e90b439f.png"></p><h2 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h2>]]></content>
      
      
      <categories>
          
          <category> upload注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> upload注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云云服务器</title>
      <link href="/2024/06/17/a-li-yun-yun-fu-wu-qi/"/>
      <url>/2024/06/17/a-li-yun-yun-fu-wu-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="阿里云-云服务器"><a href="#阿里云-云服务器" class="headerlink" title="阿里云-云服务器"></a>阿里云-云服务器</h1><blockquote><p>云服务器 ECS（Elastic Compute Service）是一种安全可靠、弹性可伸缩的云计算服务，助您降低 IT 成本，提升运维效率，使您更专注于核心业务创新。 专业的售前技术支持，协助您选择最合适配置方案</p></blockquote><ul><li>弹性伸缩（Elastic Scaling service）是根据用户的业务需求和策略，经济地自动调整弹性计算资源的管理服务。弹性伸缩不仅适合业务量不断波动的应用程序，同时也适合业务量稳定的应用程序。免费使用，所需资源按照相关价格计费。</li></ul><p><img src="https://pic.imgdb.cn/item/666fd110d9c307b7e9e5eabd.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>小白图解网络学习笔记</title>
      <link href="/2024/06/07/xiao-bai-tu-jie-wang-luo-xue-xi-bi-ji/"/>
      <url>/2024/06/07/xiao-bai-tu-jie-wang-luo-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="小白图解网络学习笔记"><a href="#小白图解网络学习笔记" class="headerlink" title="小白图解网络学习笔记"></a>小白图解网络学习笔记</h1><p>模型：</p><p><img src="https://pic.imgdb.cn/item/666309395e6d1bfa055281bb.png"></p><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><h3 id="HTTP报文格式"><a href="#HTTP报文格式" class="headerlink" title="HTTP报文格式"></a>HTTP报文格式</h3><ol><li>请求报文</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">GET /cmaskboss/164203142_30_1.enhance.webmask HTTP/1.1</span><br><span class="line">请求方法 URL 协议版本</span><br><span class="line">//Headers头</span><br><span class="line">Host: upos-sz-staticks3.bilivideo.com</span><br><span class="line">Connection: keep-alive</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) </span><br><span class="line">AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36</span><br><span class="line">Accept: */*</span><br><span class="line">Origin: https://www.bilibili.com</span><br><span class="line">Sec-Fetch-Site: cross-site</span><br><span class="line">Sec-Fetch-Mode: cors</span><br><span class="line">Sec-Fetch-Dest: empty</span><br><span class="line">Referer: https://www.bilibili.com/</span><br><span class="line">Accept-Encoding: identity</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Range: bytes=0-16</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>响应报文</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 206 Partial Content</span><br><span class="line">协议版本  状态码    状态描述符</span><br><span class="line">//Headers信息</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line">Content-Length: 17</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Server: Tengine</span><br><span class="line">ETag: "92086de1e6d1d4791fb950a0ac7e30ba"</span><br><span class="line">Date: Sat, 30 Jan 2021 09:31:31 GMT</span><br><span class="line">Last-Modified: Sun, 04 Oct 2020 01:54:28 GMT</span><br><span class="line">Expires: Mon, 01 Mar 2021 09:31:31 GMT</span><br><span class="line">Age: 1018695</span><br><span class="line">Content-Range: bytes 0-16/353225</span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line">X-Application-Context: application</span><br><span class="line">x-kss-request-id: 75bcbfa8ab194e3c825e89c81a912692</span><br><span class="line">x-kss-BucketOwner: MjAwMDAyMDEwNw==</span><br><span class="line">X-Info-StorageClass: -</span><br><span class="line">Content-MD5: kght4ebR1HkfuVCgrH4wug==</span><br><span class="line">X-Cache-Status: HIT from KS-CLOUD-JH-MP-01-03</span><br><span class="line">X-Cache-Status: HIT from KS-CLOUD-TJ-UN-14-13</span><br><span class="line">X-Cache-Status: HIT from KS-CLOUD-LF-UN-11-25</span><br><span class="line">Access-Control-Allow-Origin: https://www.bilibili.com</span><br><span class="line">Access-Control-Allow-Headers: Origin,X-Requested-With,ContentType,Accept,range</span><br><span class="line">X-Cdn-Request-ID:</span><br><span class="line">7e2c783ca7d392624118593ec1dc66bc</span><br></pre></td></tr></tbody></table></figure><h3 id="Request-URL"><a href="#Request-URL" class="headerlink" title="Request URL"></a>Request URL</h3><p>url：协议://URL：（端口号）/虚拟目录/……（虚拟目录）/文件名？</p><h4 id="URL与URI的区别"><a href="#URL与URI的区别" class="headerlink" title="URL与URI的区别"></a>URL与URI的区别</h4><ul><li><p>URL:Uniform Resource Locator 统⼀资源定位符； </p></li><li><p>URI: Uniform Resource Identifier 统⼀资源标识符；</p></li></ul><p>​URL是URI的子集</p><p>​简单解释下。 假设”小白”(URI)是⼀种资源，”在迪丽亦巴的怀里”表明了一个位置。如果你想要找到（locate）小白， 那么你可以到”在迪丽亦巴怀里”找到小白，而”在迪丽亦巴怀里的/小白”才是我们常说的URL。而”在迪丽亦巴怀里的/小白”（URL）显然是”小白”（URI）的子集，毕竟，”小白”还可能是”在牛亦菲怀⾥的/小白”（其他URL）</p><h3 id="Request-Method"><a href="#Request-Method" class="headerlink" title="Request Method"></a>Request Method</h3><p>请求方法：Get、POST、HEAD、OPTIONS、PUT、DELETE、TRACE 、CONNECT</p><h4 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h4><p>请求指定的⻚⾯信息，并返回消息主体(body)+头信息(header)。</p><h4 id="HEAD"><a href="#HEAD" class="headerlink" title="HEAD"></a>HEAD</h4><p>HEAD和GET本质是⼀样的，区别在于HEAD只返回头信息(header)，不返回消息主体(body)</p><ul><li><p>HEAD省下拿body的消耗</p></li><li><p>如果请求的是⼀个⽐较⼤的资源，使用HEAD请求，返回的headers会带有文件的大小，不需要整个下载下来</p></li></ul><h4 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h4><p>POST每次调用都可能会修改数据，是非幂等的，而GET类似于只读，是幂等的。在HTTP规范中POST是非等幂的，多次调用会产生不同的结果</p><h4 id="PUT"><a href="#PUT" class="headerlink" title="PUT"></a>PUT</h4><p>创建⼀个用户,由于网络原因或是其他原因多创建了几次,那么将会有多个⽤户被创建。而PUT id/xiaobai 则会创建⼀ 个id为 xiaobai 的用户，多次调用还是会创建的结果是⼀样的，所以PUT是等幂的</p><h4 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h4><p>⼀般实战中如果是删除操作，也是使⽤POST来替代</p><h4 id="OPTIONS"><a href="#OPTIONS" class="headerlink" title="OPTIONS"></a>OPTIONS</h4><p>用于获取当前URL所支持的方法，若请求成功，则它会在HTTP响应头部中带上给各种“Allow”的头，表明某个请求在对应的服务器中都支持哪种请求方法</p><p><img src="https://pic.imgdb.cn/item/66631c7e5e6d1bfa056c0e04.png"></p><ul><li><p>Response Header里的关键字段</p><p>  <img src="https://pic.imgdb.cn/item/66631cf65e6d1bfa056cba38.png"></p></li></ul><p>跨域的情况下，浏览器发起复杂请求前会自动发起 options 请求</p><h5 id="简单请求"><a href="#简单请求" class="headerlink" title="简单请求"></a>简单请求</h5><ul><li>请求⽅法为 GET、HEAD、POST </li><li>只有以下 Headers 字段 <ul><li>Accept </li><li>Accept-Language</li><li>Content-Language </li><li>Content-Type </li><li>DPR/Downlink/Save-Data/Viewport-Width/Width (这些不常⻅，放在⼀起)</li></ul></li><li>Content-Type 只有以下三种 <ul><li>application/x-www-form-urlencoded </li><li>multipart/form-data </li><li>text/plain</li></ul></li><li>请求中的任意 XMLHttpRequestUpload 对象均没有注册任何事件监听器； </li><li>请求中没有使⽤ ReadableStream 对象。</li></ul><h5 id="复杂请求"><a href="#复杂请求" class="headerlink" title="复杂请求"></a>复杂请求</h5>]]></content>
      
      
      <categories>
          
          <category> 网络技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web安全攻防-渗透测试实战指南</title>
      <link href="/2024/06/07/web-an-quan-gong-fang-shen-tou-ce-shi-shi-zhan-zhi-nan/"/>
      <url>/2024/06/07/web-an-quan-gong-fang-shen-tou-ce-shi-shi-zhan-zhi-nan/</url>
      
        <content type="html"><![CDATA[<p>学习资源：<a href="https://www.bilibili.com/video/BV1uT4y1i73u">【MS08067实验室】《Web安全攻防:渗透测试实战指南》全套视频，学安全这一套就够了（零基础入门到就业）_哔哩哔哩_bilibili</a></p><h1 id="Web安全攻防-渗透测试实战指南"><a href="#Web安全攻防-渗透测试实战指南" class="headerlink" title="Web安全攻防-渗透测试实战指南"></a>Web安全攻防-渗透测试实战指南</h1><h2 id="Web基础知识"><a href="#Web基础知识" class="headerlink" title="Web基础知识"></a>Web基础知识</h2><h3 id="Web常见术语"><a href="#Web常见术语" class="headerlink" title="Web常见术语"></a>Web常见术语</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>汇编语言</title>
      <link href="/2024/06/06/hui-bian-yu-yan/"/>
      <url>/2024/06/06/hui-bian-yu-yan/</url>
      
        <content type="html"><![CDATA[<h1 id="汇编语言"><a href="#汇编语言" class="headerlink" title="汇编语言"></a>汇编语言</h1><h2 id="学习路径-："><a href="#学习路径-：" class="headerlink" title="==学习路径==："></a>==学习路径==：</h2><p>[汇编语言](<a href="https://www.bilibili.com/video/BV1Rs411c7HG%EF%BC%89">https://www.bilibili.com/video/BV1Rs411c7HG）</a></p><h2 id="测试点练习路径-："><a href="#测试点练习路径-：" class="headerlink" title="==测试点练习路径==："></a>==测试点练习路径==：</h2><p><a href="https://hansimov.gitbook.io/asm-lang/solutions/ch01-basics">汇编语言 - 王爽</a></p><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><blockquote><p>汇编语言是机器指令便于记忆的的书写格式</p></blockquote><h3 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h3><ol><li>汇编指令（机器码的助记符）</li><li>伪指令（由编译器执行）</li><li>其他符号（由编译器识别）：+-*÷ 由编译器转换为逻辑运算符（与或非）传给计算机执行</li></ol><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><blockquote><p>存储单元的地址（地址信息）<br>器件的选择，读或写命令（控制信息）<br>读或写的数据（数据信息）</p></blockquote><p>==总线==：连接CPU与其他芯片的导线</p><ol><li><p>地址总线</p><ul><li>通过地址总线来指定存储单元</li><li>一个cpu有N根地址总线，则可以说这个cpu地址总线的宽度位N，最多可以寻找2^n^个存储单元</li><li>64位的速度由64位CPU、64位操作系统、64位软件共同决定</li></ul></li><li><p>数据总线</p><ul><li>数据总线的宽度决定cpu与外界的数据传送速度</li></ul></li><li><p>控制总线</p><ul><li>有多少根控制总线，就意味着cpu提供了对外部器件的多少种控制</li></ul></li></ol><p>==内存地址空间==：</p><p>​假如一个cpu的地址总线宽度为10，那么可以寻址1024个内存单元，这些内存单元就构成了这个cpu的内存地址空间</p><p>==主板==：</p><p>​一个PC有一个主板，包含核心器件和主要器件，这些器件通过总线相连</p><p>==接口卡==：</p><p>​cpu对外部设备不能直接控制，直接控制这些设备进行互作的是插在扩展插槽的接口卡</p><p>==存储器芯片==：</p><ol><li><p>从读写属性上看分为：随机存储器（RAM）和只读存储器（ROM）</p></li><li><p>从功能和连接上分类：</p><ul><li><p>随机存储器RAM</p></li><li><p>装有BIOS的ROM</p><ol><li>BIOS(基本输入输出系统)：由主板和各类接口卡厂商提供的软件系统，可以通过它利用该硬件设备进行最基础的输入输出。cpu与显示器通过显卡；网卡。</li></ol></li><li><p>接口卡上的RAM</p></li></ul></li></ol><p>主板逻辑连接：</p><img src="https://pic.imgdb.cn/item/6662f2ef5e6d1bfa053655fe.png" style="zoom: 67%;"><h2 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h2><h3 id="CPU概述"><a href="#CPU概述" class="headerlink" title="CPU概述"></a>CPU概述</h3><blockquote><p>由运算器、控制器、寄存器等器件组成</p></blockquote><h3 id="寄存器概述"><a href="#寄存器概述" class="headerlink" title="寄存器概述"></a>寄存器概述</h3><blockquote><p>8086CPU有14个寄存器</p></blockquote><p>==通用寄存器==：</p><ol><li><p>通用寄存器：AX，BX，CX，DX：存放一般数据</p></li><li><p>8086CPU所有的寄存器都是16位，可以存放两个字节</p></li></ol><p><img src="https://pic.imgdb.cn/item/66651a0f5e6d1bfa05504fc1.png"></p><img src="https://pic.imgdb.cn/item/66651a915e6d1bfa05511a7b.png" style="zoom: 80%;"><ol start="3"><li><p>为保证兼容性，会将这四个16位的寄存器都分别分为两个独立的8位的寄存器（可独立使用），以兼容以前的8位寄存器</p></li><li><p>AX可以分为AH（高位）和AL（低位），BX、CX、DX同理</p></li></ol><p><img src="https://pic.imgdb.cn/item/66651c475e6d1bfa05541995.png"></p><p>==字==：</p><p>一个字=2字节（2B），字高位和低位分别对应寄存器的高位和低位</p><h3 id="汇编指令"><a href="#汇编指令" class="headerlink" title="汇编指令"></a>汇编指令</h3><blockquote><p>汇编指令不区分大小写</p></blockquote><p><img src="https://pic.imgdb.cn/item/666526ed5e6d1bfa055e1914.png"></p><p><img src="https://pic.imgdb.cn/item/666550545e6d1bfa058c71bd.png"></p><p>00C5H+93H=0058H（不是0158H，因为高低8位是独立的，不共用，进制位会被单独存放在特点的寄存器）</p><h3 id="物理地址"><a href="#物理地址" class="headerlink" title="物理地址"></a>物理地址</h3><p>==16位结构的CPU==：</p><ol><li>运算器一次最多可以处理16位的数据</li><li>寄存器的最大宽度位16位</li><li>寄存器和运算器之间的通路是16位</li></ol><p>8086cpu给出物理地址的方法</p><img src="https://pic.imgdb.cn/item/6665596a5e6d1bfa05977392.png" style="zoom:80%;"><p>地址加法器工作原理：</p><p>​合成物理地址的方法：</p><p>​<u>物理地址=段地址*16+偏移地址</u></p><p><img src="https://pic.imgdb.cn/item/66655a625e6d1bfa05987fd4.png"></p><h3 id="段的概念"><a href="#段的概念" class="headerlink" title="段的概念"></a>段的概念</h3><blockquote><p>内存并没有分段，段的划分来自于CPU</p><p>CPU访问内单元时，必须向内存提供内存单元的物理地址</p><p>8086CPU在内部用段地址和偏移地址移位相加的方法形成最终的物理地址</p></blockquote><ul><li>CPU可以用不同的段地址+偏移地址形成同一个物理地址</li></ul><p><img src="https://pic.imgdb.cn/item/66729796d9c307b7e9683f92.png"></p><h3 id="段寄存器"><a href="#段寄存器" class="headerlink" title="段寄存器"></a>段寄存器</h3><blockquote><p>8086CPU有四个段寄存器：CS、DS、SS、ES</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPN技术</title>
      <link href="/2024/06/06/vpn-ji-zhu/"/>
      <url>/2024/06/06/vpn-ji-zhu/</url>
      
        <content type="html"><![CDATA[<h1 id="VPN技术"><a href="#VPN技术" class="headerlink" title="VPN技术"></a>VPN技术</h1><h2 id="VPN是干啥的"><a href="#VPN是干啥的" class="headerlink" title="VPN是干啥的"></a>VPN是干啥的</h2><blockquote><p>==官方解释==：</p><p>​VPN（Virtual Private Network，虚拟专用网络）技术是一种可以在公共网络上建立安全的、加密的连接，使用户可以通过网络访问私有网络资源的技术。VPN技术通过在用户和目标网络之间建立加密隧道来确保数据传输的安全性和私密性，避免了数据在互联网上传输时被非法获取或篡改的风险。<br>​VPN技术的主要作用包括：提供加密保护的网络连接、绕过地理位置限制、保护隐私和匿名性、保护数据传输的安全性。在实际应用中，VPN技术广泛应用于企业内部网络、远程办公、跨国公司的分支机构连接、绕过地域限制的访问等场景。</p><p>==我的理解==：</p><p>​首先，先明白ipv4地址是有限的，并且从ipv4过渡到ipv6的过程是漫长的，所以就出现了NAT技术（地址转换），所以也就有了公网地址和私网地址之分，公网地址就是可以在公共的Internet上传数据的IP地址，私网地址就是只能在本地进行数据传输的ip地址。<br>​但是，当你想要提供安全的传输，数据不被篡改，就可以建立VPN隧道来保障。<br>​两个公司一个总部，一个分部，他们之间可以建立VPN隧道，这样他们就可以看作在同一个网段通信了</p></blockquote><h2 id="VPN的分类"><a href="#VPN的分类" class="headerlink" title="VPN的分类"></a>VPN的分类</h2><h3 id="GRE"><a href="#GRE" class="headerlink" title="GRE"></a>GRE</h3><blockquote><p>最大的优点：兼容性强，不管是单播、广播都可以打通，第二个优点就是简单，利于学习</p><p>缺点：不安全</p></blockquote><p>给数据包加上一个新头部来实现隧道传输</p><blockquote><p>举个例子：</p><p>总部和分公司，源地址192.168.1.x（私网地址），目标地址172.16.1.x（私网地址）</p><p>加一个新头部，源地址64.1.1.1（出口路由器公网地址），目标地址202.1.1.1（出口路由器公网地址）</p><p>数据包送到分公司的出口路由器，路由器将外层报头拆掉，露出真实目标地址</p></blockquote><h4 id="配置实战"><a href="#配置实战" class="headerlink" title="配置实战"></a>配置实战</h4><p>实验拓扑图：</p><img src="https://pic.imgdb.cn/item/66728d6ed9c307b7e954a06d.png" style="zoom: 67%;"><p>出口路由器AR1上作配置:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]int Tunnel 0/0/0//创建隧道接口</span><br><span class="line">[Huawei-Tunnel-0/0/0]tunnel-protocol gre//隧道协议为gre</span><br><span class="line">[Huawei-Tunnel-0/0/0]source 64.1.1.1//隧道源地址(公网ip)</span><br><span class="line">[Huawei-Tunnel-0/0/0]destination 202.1.1.1      //隧道目的地址(公网ip)</span><br><span class="line">[Huawei-Tunnel-0/0/0]ip add 10.1.1.1 24//创建隧道口的虚拟ip</span><br><span class="line">[Huawei]dis ip int b//查看接口信息</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/66728d29d9c307b7e9542d26.png"></p><p>出口路由器AR2上作相对应配置:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]int Tunnel 0/0/0//创建隧道接口</span><br><span class="line">[Huawei-Tunnel-0/0/0]tunnel-protocol gre//隧道协议为gre</span><br><span class="line">[Huawei-Tunnel-0/0/0]source 202.1.1.1//隧道源地址(公网ip)</span><br><span class="line">[Huawei-Tunnel-0/0/0]destination 64.1.1.1       //隧道目的地址(公网ip)</span><br><span class="line">[Huawei-Tunnel-0/0/0]ip add 10.1.1.2 24//创建隧道口的虚拟ip</span><br></pre></td></tr></tbody></table></figure><p>出口路由器配置静态路由：</p><p>AR1:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]ip route-static 172.16.1.0 24 10.1.1.2//下一跳写隧道对端的虚拟ip</span><br></pre></td></tr></tbody></table></figure><p>AR2:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]ip route-static 192.168.1.0 24 10.1.1.1//下一跳写隧道对端的虚拟ip</span><br></pre></td></tr></tbody></table></figure><p>抓包分析：</p><img src="https://pic.imgdb.cn/item/66728f18d9c307b7e9579c58.png" style="zoom:200%;"><h4 id="安全隐患"><a href="#安全隐患" class="headerlink" title="安全隐患"></a>安全隐患</h4><ol><li>明文传输，数据未加密，容易被窃取</li><li>没有完整性验证，没有防篡改功能</li><li>没有身份验证</li></ol><p>进而可以用IPSec</p><h3 id="IPSec"><a href="#IPSec" class="headerlink" title="IPSec"></a>IPSec</h3><blockquote><p>防火墙有安全域（信任，不信任）</p><p>优点：</p><ul><li><p>数据加密，即使被截胡，也看不懂</p></li><li><p>哈希，防篡改</p></li><li><p>身份验证</p></li></ul></blockquote><h4 id="配置实战-1"><a href="#配置实战-1" class="headerlink" title="配置实战"></a>配置实战</h4><p>实验拓扑图：</p><img src="https://pic.imgdb.cn/item/66729290d9c307b7e95f29ec.png" style="zoom:67%;"><blockquote><p>防火墙默认账号：admin，密码：admin@123</p></blockquote><p>配置防火墙接口地址……</p><p>配置FW1默认路由：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[USG6000V1]ip route-static 0.0.0.0 0 64.1.1.2</span><br></pre></td></tr></tbody></table></figure><p>配置FW2默认路由：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[USG6000V1]ip route-static 0.0.0.0 0 202.1.1.2</span><br></pre></td></tr></tbody></table></figure><p>配置FW1与FW2安全域</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[USG6000V1]firewall zone trust //配置信任域</span><br><span class="line">[USG6000V1-zone-trust]add int g0/1/0//将接口加入信任域</span><br><span class="line">[USG6000V1]firewall zone untrust//配置非信任域</span><br><span class="line">[USG6000V1-zone-untrust]add int g1/0/0//将接口加入信任域</span><br></pre></td></tr></tbody></table></figure><p>配置FW1与FW2安全策略</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[USG6000V1]security-policy //进入安全策略</span><br><span class="line">[USG6000V1-policy-security]rule name 123 //新建策略名称</span><br><span class="line">[USG6000V1-policy-security-rule-123]action permit//放行所有</span><br><span class="line">[USG6000V1]int g1/0/0</span><br><span class="line">[USG6000V1-g1/0/0]service-manage ping permit//允许接口被ping</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> VPN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>封神台高校CTF练习（Web靶场）</title>
      <link href="/2024/06/04/feng-shen-tai-gao-xiao-ctf-lian-xi-web-ba-chang/"/>
      <url>/2024/06/04/feng-shen-tai-gao-xiao-ctf-lian-xi-web-ba-chang/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> CTF练习 </category>
          
          <category> Web攻防 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入-sqli-labs-master练习</title>
      <link href="/2024/05/29/sqli-labs-master/"/>
      <url>/2024/05/29/sqli-labs-master/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入-sqli-labs-master练习"><a href="#SQL注入-sqli-labs-master练习" class="headerlink" title="SQL注入-sqli-labs-master练习"></a>SQL注入-sqli-labs-master练习</h1><h2 id="Less-1（基于错误的GET单引号字符型注入）"><a href="#Less-1（基于错误的GET单引号字符型注入）" class="headerlink" title="Less-1（基于错误的GET单引号字符型注入）"></a>Less-1（基于错误的GET单引号字符型注入）</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">联合查询注⼊流程&nbsp;</span><br><span class="line">1、判断原有查询语句字段数数</span><br><span class="line">2、使原来查询语句的查询结果为空</span><br><span class="line">3、判断查询结果输出位置</span><br><span class="line">4、使⽤ union 操作符拼接 payload 语句</span><br><span class="line">5、利⽤ payload 进⾏数据查询</span><br></pre></td></tr></tbody></table></figure><blockquote><p>显示正常页面</p></blockquote><p><img src="https://pic.imgdb.cn/item/665f1e4a5e6d1bfa059237d2.png"></p><blockquote><p>找注入点，破坏SQL语法结构，发现存在注入点，并且为字符型</p></blockquote><p><img src="https://pic.imgdb.cn/item/665f1e9f5e6d1bfa0592d24e.png" alt="不为数字型"></p><p><img src="https://pic.imgdb.cn/item/665f1dca5e6d1bfa059120fe.png" alt="字符型"></p><blockquote><p>用联合查询，需要知道对应的列数，于是用order by判断列数<br>先用10列来测，回显不对，于是二分继续测试</p></blockquote><p><img src="https://pic.imgdb.cn/item/665f1fd85e6d1bfa05944713.png"></p><blockquote><p>测试出有3列</p></blockquote><p><img src="https://pic.imgdb.cn/item/665f20645e6d1bfa0594e49e.png"></p><blockquote><p>用union查询，判断回显位置，回显位置为2，3</p></blockquote><p><img src="https://pic.imgdb.cn/item/665f210c5e6d1bfa0595a8a2.png"></p><blockquote><p>查数据库名称</p></blockquote><p><img src="https://pic.imgdb.cn/item/665f213e5e6d1bfa0595e6ab.png" alt="查数据库名"></p><blockquote><p>查数据表名</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在 mysql5.0 以上的版本中加⼊了 information_schema 这个系统库，该库内存放该数据库所有的库名，表名，字段名以及它们的从属关系，利⽤ information_schema 库可以查询当前数据所有的表名</span><br><span class="line">用group_concat()函数显示所有表名</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/665f22965e6d1bfa05975f44.png" alt="查数据表名"></p><blockquote><p>用户信息在表“users”里，于是查其字段名</p></blockquote><p><img src="https://pic.imgdb.cn/item/665f23265e6d1bfa0597fc97.png" alt="查字段名"></p><blockquote><p>查用户数据</p></blockquote><p><img src="https://pic.imgdb.cn/item/665f23ab5e6d1bfa05988597.png" alt="查数据"></p><h2 id="Less-2（基于错误的GET整型注入）"><a href="#Less-2（基于错误的GET整型注入）" class="headerlink" title="Less-2（基于错误的GET整型注入）"></a>Less-2（基于错误的GET整型注入）</h2><h2 id="Less-3"><a href="#Less-3" class="headerlink" title="Less-3"></a>Less-3</h2><h2 id="Less-4"><a href="#Less-4" class="headerlink" title="Less-4"></a>Less-4</h2><h2 id="Less-5"><a href="#Less-5" class="headerlink" title="Less-5"></a>Less-5</h2><h2 id="Less-6"><a href="#Less-6" class="headerlink" title="Less-6"></a>Less-6</h2>]]></content>
      
      
      <categories>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>封神台高校CTF练习（Misc入门靶场）</title>
      <link href="/2024/05/29/feng-shen-tai-gao-xiao-ctf-lian-xi-misc-ru-men-ba-chang/"/>
      <url>/2024/05/29/feng-shen-tai-gao-xiao-ctf-lian-xi-misc-ru-men-ba-chang/</url>
      
        <content type="html"><![CDATA[<h1 id="封神台高校CTF练习（Misc入门靶场）"><a href="#封神台高校CTF练习（Misc入门靶场）" class="headerlink" title="封神台高校CTF练习（Misc入门靶场）"></a>封神台高校CTF练习（Misc入门靶场）</h1><hr><h3 id="封神台练习平台"><a href="#封神台练习平台" class="headerlink" title="封神台练习平台"></a><a href="https://hack.zkaq.cn/">封神台练习平台</a></h3><h2 id="用到的工具平台"><a href="#用到的工具平台" class="headerlink" title="==用到的工具平台=="></a>==用到的工具平台==</h2><p>Unicode加解密：<a href="https://www.toolhelper.cn/EncodeDecode/UnicodeChinese">https://www.toolhelper.cn/EncodeDecode/UnicodeChinese</a><br>RC4加解密：<a href="https://www.lddgo.net/encrypt/rc4">在线RC4加密解密 (lddgo.net)</a><br>MD5加解密：<a href="https://www.cmd5.com/default.aspx">md5在线解密破解,md5解密加密 (cmd5.com)</a><br>凯撒密码加解密：<a href="https://www.lddgo.net/encrypt/caesar-cipher">在线凯撒密码加密解密 (lddgo.net)</a><br>核心价值观加解密平台：<a href="http://www.hiencode.com/cvencode.html">CTF在线工具-在线核心价值观编码|核心价值观编码算法|Core Values Encoder (hiencode.com)</a><br>栅栏加解密平台：（<a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php">栅栏密码在线加密解密 - 千千秀字 (qqxiuzi.cn)</a>）<br>Base加解密平台：<a href="http://www.hiencode.com/base64.html">CTF在线工具-在线base编码|在线base解码|base16编码|base32编码|base64编码 (hiencode.com)</a><br>百度识图：<a href="https://graph.baidu.com/pcpage/index?tpl_from=pc">https://graph.baidu.com/pcpage/index?tpl_from=pc</a></p><h2 id="（1）杂项1：图片隐写"><a href="#（1）杂项1：图片隐写" class="headerlink" title="（1）杂项1：图片隐写"></a>（1）杂项1：图片隐写</h2><p> <img src="https://pic.imgdb.cn/item/665715c4d9c307b7e93f60fd.png"></p><ul><li><p>步骤</p><blockquote><p>将图片下载到本地，并且用文本文档（.txt）打开并查看源码</p></blockquote><p>  <img src="https://pic.imgdb.cn/item/66571ca6d9c307b7e9485bcc.png" alt="图片"></p><blockquote><p>查看源码，发现有Unicode码</p></blockquote>  <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#107;&amp;#101;&amp;#121;&amp;#123;&amp;#122;&amp;#45;&amp;#110;&amp;#115;&amp;#100;&amp;#105;&amp;#117;&amp;#97;&amp;#125;</span><br></pre></td></tr></tbody></table></figure><blockquote><p>在网上搜一个Unicode码解码工具（<a href="https://www.toolhelper.cn/EncodeDecode/UnicodeChinese">Unicode与中文 编码/解码 - 锤子在线工具 (toolhelper.cn)</a> ，并解码</p></blockquote><p>  <img src="https://pic.imgdb.cn/item/66571e63d9c307b7e94a21a2.png" alt="解码"></p><blockquote><p>得到flag</p></blockquote>  <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key{z-nsdiua}</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="（2）杂项2：密文在这里-看看你是否能解开"><a href="#（2）杂项2：密文在这里-看看你是否能解开" class="headerlink" title="（2）杂项2：密文在这里,看看你是否能解开"></a>（2）杂项2：密文在这里,看看你是否能解开</h2><p><img src="https://pic.imgdb.cn/item/66572105d9c307b7e94cc375.png"></p><p>==RC4原理：==</p><p>RC4（Rivest Cipher 4）是一种流密码（stream cipher）算法，用于加密和解密数据。它由Ron Rivest设计并于1987年发布。RC4算法的核心是通过对称密钥生成伪随机位流（pseudo-random stream），然后将明文与该位流进行抑或（XOR）运算来实现加密和解密。</p><p>具体来说，RC4算法包括以下步骤：</p><ol><li><strong>密钥调度算法（Key Scheduling Algorithm，KSA）</strong>：根据输入的密钥，生成一个密钥调度表（S-box），用于后续的伪随机位流生成。</li><li><strong>伪随机生成算法（Pseudo-Random Generation Algorithm，PRGA）</strong>：利用密钥调度表生成一个伪随机位流，该位流的元素会被用作加密过程中的“密钥流”。</li><li><strong>加密/解密</strong>：将明文与伪随机位流进行逐位的抑或运算，以实现加密或解密操作。</li></ol><p>在使用RC4算法时，需要注意以下几点：</p><ul><li>密钥的选择和管理非常重要，弱密钥会导致加密的不安全性。</li><li>加密和解密使用相同的密钥。</li><li>在实际应用中，通常需要引入初始化向量（Initialization Vector，IV）来提高安全性。</li></ul><p>总的来说，RC4算法是一种快速且简单的加密算法，但由于存在一些安全性方面的问题，如密钥漏洞和偏差等，现在已不推荐作为加密标准使用。</p><ul><li><p>步骤：</p><blockquote><p>RC4解密是需要密钥的，所以需要寻找密钥，题中一个声音在耳边响起，看一下自己的键盘，他好像在组成某种神秘的组合（rtygcvb ，ujmko，ujmko），跟着他的字母在键盘上对一下，于是前两个组成了两个字母</p></blockquote></li></ul><p><img src="https://pic.imgdb.cn/item/665723b9d9c307b7e94fbc8b.jpg"></p><blockquote><p>重复敲击两次，那么猜测密钥为zvvzvv,并在网上找一个RC4解密工具解密（<a href="https://www.lddgo.net/encrypt/rc4">在线RC4加密解密 (lddgo.net)</a>）</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密文：M6UUSlt6rxWO328Kez8xXCMd</span><br></pre></td></tr></tbody></table></figure><blockquote><p>输入密钥，将字符集选择为UTF-8，输入格式为base64，输出格式为字符串（string）</p></blockquote><p><img src="https://pic.imgdb.cn/item/665725e7d9c307b7e9521dbe.png" alt="RC4解密"></p><blockquote><p>得到flag</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key{zkz-good-kkey}</span><br></pre></td></tr></tbody></table></figure><h2 id="（3）杂项3：一段特殊的ascii密文"><a href="#（3）杂项3：一段特殊的ascii密文" class="headerlink" title="（3）杂项3：一段特殊的ascii密文"></a>（3）杂项3：一段特殊的ascii密文</h2><p><img src="https://pic.imgdb.cn/item/665726bdd9c307b7e953599f.png"></p><ul><li>步骤：</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">83,121,110,116,71,115,121,110,116,136,135,120,135,108,110,126,115,112,63,61,63,62,108,67,63,69,108,76,76,76,76,138,90,113,66,71,112,110,66,62,62,67,112,112,66,111,112,67,113,63,110,114,69,66,65,110,111,111,113,68,61,63,112,69,68,68,68</span><br></pre></td></tr></tbody></table></figure><blockquote><p>首先，猜测flag是以“flag”开头的，且121,110,116三个数在2，3，4位置和在7，8，9位置都在，那么先将flag转换为ascii码，为102，108，97，103，</p><p>102（+6）108（-11）97（+6）103</p><p>121（-11）110（+6）116</p><p>那么可以看出108，97，103和121，110，116之间的差距是相同的，那么121-108=13，将所有数字-13</p></blockquote><blockquote><p>那么写一个python代码，将这些整数转化为ascii码</p></blockquote><p><img src="https://pic.imgdb.cn/item/66572bf9d9c307b7e95b1749.png" alt="代码运行图"></p><p>代码：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">83</span>,<span class="number">121</span>,<span class="number">110</span>,<span class="number">116</span>,<span class="number">71</span>,<span class="number">115</span>,<span class="number">121</span>,<span class="number">110</span>,<span class="number">116</span>,<span class="number">136</span>,<span class="number">135</span>,<span class="number">120</span>,<span class="number">135</span>,</span><br><span class="line">   <span class="number">108</span>,<span class="number">110</span>,<span class="number">126</span>,<span class="number">115</span>,<span class="number">112</span>,<span class="number">63</span>,<span class="number">61</span>,<span class="number">63</span>,<span class="number">62</span>,<span class="number">108</span>,<span class="number">67</span>,<span class="number">63</span>,<span class="number">69</span>,<span class="number">108</span>,</span><br><span class="line">   <span class="number">76</span>,<span class="number">76</span>,<span class="number">76</span>,<span class="number">76</span>,<span class="number">138</span>,<span class="number">90</span>,<span class="number">113</span>,<span class="number">66</span>,<span class="number">71</span>,<span class="number">112</span>,<span class="number">110</span>,<span class="number">66</span>,<span class="number">62</span>,<span class="number">62</span>,<span class="number">67</span>,</span><br><span class="line">   <span class="number">112</span>,<span class="number">112</span>,<span class="number">66</span>,<span class="number">111</span>,<span class="number">112</span>,<span class="number">67</span>,<span class="number">113</span>,<span class="number">63</span>,<span class="number">110</span>,<span class="number">114</span>,<span class="number">69</span>,<span class="number">66</span>,<span class="number">65</span>,<span class="number">110</span>,</span><br><span class="line">   <span class="number">111</span>,<span class="number">111</span>,<span class="number">113</span>,<span class="number">68</span>,<span class="number">61</span>,<span class="number">63</span>,<span class="number">112</span>,<span class="number">69</span>,<span class="number">68</span>,<span class="number">68</span>,<span class="number">68</span>]</span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    j = <span class="built_in">chr</span>(i-<span class="number">13</span>)</span><br><span class="line">    <span class="comment"># chr()函数用于返回指定整数对应的ASCII字符</span></span><br><span class="line">    flag=flag+j</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><blockquote><p>得到部分的flag，md5值其实最后还有个d，这个d其实也是可以跑出来的</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Flag:flag{zkz_aqfc2021_628_????}Md5:ca5116cc5bc6d2ae854abbd702c8777d</span><br></pre></td></tr></tbody></table></figure><blockquote><p>这里的一个思路就是尝试用md5解密工具（<a href="https://www.cmd5.com/default.aspx">md5在线解密破解,md5解密加密 (cmd5.com)</a>），但是是不成功的，因为数据源是无穷尽的，而 MD5密文是有限的。</p><p>那么这里我就查看了平台的解题思路：标准的md5碰撞，写一个碰撞脚本（碰撞需要一段时间，耐心等待）</p></blockquote><p><img src="https://pic.imgdb.cn/item/66573179d9c307b7e961bb4b.png" alt="MD5碰撞脚本运行"></p><p>代码：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">flag_md5 = 'ca5116cc5bc6d2ae854abbd702c8777d'</span><br><span class="line">strs = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&amp;()" \</span><br><span class="line">       "*+,-./:;&lt;=&gt;?@[\]^_`{|}~ "</span><br><span class="line">for a in strs:</span><br><span class="line">    for b in strs:</span><br><span class="line">        for c in strs:</span><br><span class="line">            for d in strs:</span><br><span class="line">                md5 = hashlib.md5()</span><br><span class="line">                flag = 'flag{zkz_aqfc2021_628_' +str(a)+str(b)+str(c)+str(d)+'}'</span><br><span class="line">                md5.update(flag.encode())</span><br><span class="line">                if md5.hexdigest() == flag_md5:</span><br><span class="line">                    print(flag)</span><br></pre></td></tr></tbody></table></figure><blockquote><p>得到flag</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{zkz_aqfc2021_628_zxcv}</span><br></pre></td></tr></tbody></table></figure><h3 id="杂项3学习资料补充"><a href="#杂项3学习资料补充" class="headerlink" title="杂项3学习资料补充"></a>杂项3学习资料补充</h3><p>==hashlib库==</p><ul><li><p>hashlib库是Python的一个标准库，用于提供哈希算法。其中包含多种哈希算法，如MD5、SHA-1、SHA-256等。</p></li><li><p>MD5 (Message Digest Algorithm 5) 是一种广泛使用的哈希算法，用于将任意长度的输入数据生成一个128位的哈希值。它具有以下特点：</p><ol><li><p>不可逆：无法从生成的哈希值还原出原始数据。</p></li><li><p>唯一性：不同的输入数据生成的哈希值几乎不会相同。</p></li><li><p>高效性：计算速度快，适合用于检查数据完整性。</p></li></ol></li></ul><p>在Python中，可以使用<code>hashlib</code>库中的<code>md5()</code>函数来计算数据的MD5哈希值，示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">data = <span class="string">'Hello, World!'</span></span><br><span class="line">md5_hash = hashlib.md5(data).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"MD5 hash value:"</span>, md5_hash)</span><br></pre></td></tr></tbody></table></figure><p>这段代码会计算字符串<code>'Hello, World!'</code>的MD5哈希值，并打印出该哈希值。</p><p><code>hexdigest()</code>是<code>hashlib</code>库中<code>hash</code>对象的一个方法，用于获取以十六进制表示的哈希值。在计算完哈希值之后，可以使用<code>hexdigest()</code>方法将哈希值转换为字符串形式，方便输出或者存储。这样可以避免直接输出二进制形式的哈希值，使得结果更易读和使用。</p><h2 id="（4）杂项4：一个加密的xlsx表格"><a href="#（4）杂项4：一个加密的xlsx表格" class="headerlink" title="（4）杂项4：一个加密的xlsx表格"></a>（4）杂项4：一个加密的xlsx表格</h2><p><img src="https://pic.imgdb.cn/item/665734d3d9c307b7e96603a0.png"></p><blockquote><p>打开传送门后，想要下载表格就需要密码</p></blockquote><p><img src="https://pic.imgdb.cn/item/66573901d9c307b7e96c4d91.png"></p><blockquote><p>尝试用文本文档（txt）打开寻找线索，真就发现了线索</p></blockquote><p><img src="https://pic.imgdb.cn/item/665739a2d9c307b7e96d1572.png"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{asd}</span><br></pre></td></tr></tbody></table></figure><h2 id="（5）杂项5：刚刚截获德军的密电"><a href="#（5）杂项5：刚刚截获德军的密电" class="headerlink" title="（5）杂项5：刚刚截获德军的密电"></a>（5）杂项5：刚刚截获德军的密电</h2><p><img src="https://pic.imgdb.cn/item/66573d4ad9c307b7e9716e07.png"></p><p>==ADFGX古典密码==<br>　　1918年，第一次世界大战将要结束时，法军截获了一份德军电报，电文中的所有单词都由A、D、F、G、X五个字母拼成，因此被称为ADFGX密码。ADFGX密码是1918年3月由德军上校Fritz Nebel发明的，是结合了Polybius密码和置换密码的双重加密方案。<br>　　A、D、F、G、X即Polybius方阵中的前5个字母。 </p><p>　　明文：A T T A C K A T O N C E<br>　　经过Polybius变换：AF AD AD AF GF DX AF AD DF FX GF XF </p><blockquote><p>按照表进行转换：<img src="https://pic.imgdb.cn/item/665ddc6e5e6d1bfa054bb957.png" style="zoom:50%;"></p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密文：FA XX DD AG DD XA FF FF AX DX</span><br></pre></td></tr></tbody></table></figure><blockquote><p>第一个字母为行数，第二个字母为列数，转换后</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">明文：flagabxxmo</span><br></pre></td></tr></tbody></table></figure><h2 id="（6）杂项6：简单加密"><a href="#（6）杂项6：简单加密" class="headerlink" title="（6）杂项6：简单加密"></a>（6）杂项6：简单加密</h2><p><img src="https://pic.imgdb.cn/item/665dde1e5e6d1bfa054dcabc.png"></p><blockquote><p>synt一看联想到凯撒密码，f与s偏移13位，直接上工具（<a href="https://www.lddgo.net/encrypt/caesar-cipher">在线凯撒密码加密解密 (lddgo.net)</a>）</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密文：synt{mxnd_pgs_xxxebg13}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/665ddf485e6d1bfa054f841c.png"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">明文：flag{zkaq_ctf_kkkrot13}</span><br></pre></td></tr></tbody></table></figure><h2 id="（7）杂项7：社会主义核心价值观"><a href="#（7）杂项7：社会主义核心价值观" class="headerlink" title="（7）杂项7：社会主义核心价值观"></a>（7）杂项7：社会主义核心价值观</h2><p><img src="https://pic.imgdb.cn/item/665de01e5e6d1bfa0550f8e8.png"></p><blockquote><p>核心价值观加解密平台：（<a href="http://www.hiencode.com/cvencode.html">CTF在线工具-在线核心价值观编码|核心价值观编码算法|Core Values Encoder (hiencode.com)</a>）</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密文：公正公正公正诚信文明公正民主公正法治法治诚信民主法治诚信富强公正友善平等公正民主法治民主平等友善敬业法治和谐公正爱国法治诚信富强法治敬业公正爱国平等友善敬业和谐公正和谐富强和谐公正法治诚信和谐</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/665de7605e6d1bfa0559e813.png"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">明文：flag{zkaq_shzyh_606}</span><br></pre></td></tr></tbody></table></figure><h2 id="（8）杂项8：奇怪的短信"><a href="#（8）杂项8：奇怪的短信" class="headerlink" title="（8）杂项8：奇怪的短信"></a>（8）杂项8：奇怪的短信</h2><p><img src="https://pic.imgdb.cn/item/665de7c25e6d1bfa055a4a31.png"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密文：33 53 21 41 94 52 21 72 74 42</span><br></pre></td></tr></tbody></table></figure><blockquote><p>手机上发短信有9键和26键，肯定不是和26键有关，考虑9键，</p></blockquote><p>看一个9键键盘：</p><img src="https://pic.imgdb.cn/item/665de8a65e6d1bfa055c4ced.jpg" style="zoom: 33%;"><blockquote><p>第一个字母首先考虑f，则看出33，就是“3”的第三个字母，推出密文:</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密文：flagzkaqsh</span><br></pre></td></tr></tbody></table></figure><h2 id="（9）杂项9：SOS的求救信息"><a href="#（9）杂项9：SOS的求救信息" class="headerlink" title="（9）杂项9：SOS的求救信息"></a>（9）杂项9：SOS的求救信息</h2><p><img src="https://pic.imgdb.cn/item/665de9b85e6d1bfa055e0252.png"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">密文：</span><br><span class="line">..-.</span><br><span class="line">....</span><br><span class="line">..-.</span><br><span class="line">.-..</span><br><span class="line">--.-</span><br><span class="line">.-</span><br><span class="line">.-</span><br><span class="line">--.</span><br><span class="line">-.-.</span><br><span class="line">--..</span><br><span class="line">--.</span><br><span class="line">-.-</span><br><span class="line">.-</span><br><span class="line">--..</span><br><span class="line">.-..</span><br></pre></td></tr></tbody></table></figure><blockquote><p>一眼得摩斯电码，查表解决</p></blockquote><p><img src="https://pic.imgdb.cn/item/665dea305e6d1bfa055e84cf.png" alt="摩斯电码表"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">解密得：fhflqaagczgkazl</span><br></pre></td></tr></tbody></table></figure><blockquote><p>这个密码具备f、l、a、g，只是顺序有问题，考虑栅栏加密</p></blockquote><p>==栅栏加密：==</p><p>​        所谓的栅栏密码，就是将一段被加密的明文划分成N个组，然后取每个组的第1个字符，根据情况排列成一段话，特点相对简单，字母不会太多。</p><p>1、加密原理：</p><p>例如明文：THIS IS ZHISHITOM<br>去掉空格吧还是：THISISZHISHITOM<br>设置栏数为3加密：TSHHZIIHTSIOISM<br>下面分解一下加密过程（分为3组）:<br>第一组：T H I S I<br>第二组：S Z H I S<br>第三组：H I T O M<br>然后按列取出字母：TSH HZI IHT SIO ISM<br>然后连在一起就形成了加密：TSHHZIIHTSIOISM</p><p>2、解密原理<br>明确了加密的过程，下面逆推就行<br>加密明文：TSHHZIIHTSIOISM<br>先划分：<br>T S H<br>H Z I<br>I H T<br>S I O<br>I S M<br>按列顺序取字母：THISISZHISHITOM<br>完成了解密。<br>原文链接：<a href="https://blog.csdn.net/Makboli/article/details/126464442">https://blog.csdn.net/Makboli/article/details/126464442</a></p><p>栅栏加解密平台：（<a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php">栅栏密码在线加密解密 - 千千秀字 (qqxiuzi.cn)</a>）</p><p><img src="https://pic.imgdb.cn/item/665df04d5e6d1bfa0564e571.png"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">解出的明文：flagzkzhqacgalf</span><br></pre></td></tr></tbody></table></figure><blockquote><p>但是仍未通过，查看解析发现flag是需要将他倒置才可以</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交flag：flagcaqhzkzgalf</span><br></pre></td></tr></tbody></table></figure><h2 id="（10）杂项10：Base"><a href="#（10）杂项10：Base" class="headerlink" title="（10）杂项10：Base"></a>（10）杂项10：Base</h2><p><img src="https://pic.imgdb.cn/item/665df2705e6d1bfa0566e1ce.png"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密文：RzVBVE1RUlhJRTNER05aVUdZM0RPUVJXR0kzRENOWlRHWTJUR05SVEdRMlVNTlJTR1lZVE9NWldHVVpUQ01aV0c1Q0E9PT09</span><br></pre></td></tr></tbody></table></figure><p>Base加解密平台：<a href="http://www.hiencode.com/base64.html">CTF在线工具-在线base编码|在线base解码|base16编码|base32编码|base64编码 (hiencode.com)</a></p><ul><li>Base64，包含大写字母（A-Z）,小写字母（a-z），数字（0-9）以及+/；</li><li>Base32，只有大写字母（A-Z）和数字234567；</li><li>Base16，只有16进制的数据，其范围是数字(0-9)，字母（ABCDEF）。</li></ul><blockquote><p>该密文有小写所以为Base64</p></blockquote><p><img src="https://pic.imgdb.cn/item/665df4e75e6d1bfa05691bbd.png" alt="Base64解密"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Base64解密后：G5ATMQRXIE3DGNZUGY3DOQRWGI3DCNZTGY2TGNRTGQ2UMNRSGYYTOMZWGUZTCMZWG5CA====</span><br></pre></td></tr></tbody></table></figure><blockquote><p>解密后只有大写和数字234567，判断为Base32，继续解密</p></blockquote><p><img src="https://pic.imgdb.cn/item/665df54b5e6d1bfa056980e9.png" alt="Base32解密"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Base32解密后：7A6B7A6374667B6261736536345F6261736531367D</span><br></pre></td></tr></tbody></table></figure><blockquote><p>此时只有16进制的数据，其范围是数字(0-9)和字母</p></blockquote><p><img src="https://pic.imgdb.cn/item/665df5fb5e6d1bfa056a19a8.png" alt="Base16解密"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">得到flag：zkzctf{base64_base16}</span><br></pre></td></tr></tbody></table></figure><h2 id="（11）杂项11：这是我最喜欢的女明星"><a href="#（11）杂项11：这是我最喜欢的女明星" class="headerlink" title="（11）杂项11：这是我最喜欢的女明星"></a>（11）杂项11：这是我最喜欢的女明星</h2><p><img src="https://pic.imgdb.cn/item/665df6645e6d1bfa056a6e0d.png"></p><blockquote><p>第一反应是像之前一样下载下来用txt打开找flag，但是发现有太多信息了，找不到，于是回去看了解析，居然是用试图软件去识别图片人物啊！</p><p>百度识图：<a href="https://graph.baidu.com/pcpage/index?tpl_from=pc">https://graph.baidu.com/pcpage/index?tpl_from=pc</a></p></blockquote><p><img src="https://pic.imgdb.cn/item/665df7ac5e6d1bfa056cf802.png"></p><blockquote><p>那这个女神就是邱淑贞了，那就去查一查她的英文名吧！</p><p>flag：Chingmy Yau</p></blockquote><h2 id="（12）杂项12：打由诗"><a href="#（12）杂项12：打由诗" class="headerlink" title="（12）杂项12：打由诗"></a>（12）杂项12：打由诗</h2><p><img src="https://pic.imgdb.cn/item/665df82f5e6d1bfa056d600b.png"></p><blockquote><p>在网上查找得知此为当铺密码，将其每个字都转换为数字</p></blockquote><p>==当铺密码==：</p><p>当前汉字有多少笔画出头，就是转化成数字几。例如：</p><p>王：该字外面有 6 个出头的位置，所以该汉字对应的数字就是 6；</p><p>口：该字外面没有出头的位置，那就是0；</p><p>人：该字外面有 3 个出头的位置，所以该汉字对应的数字就是 3；</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密文：由口中,由口井,圭土,由口人,由中人,由中中,由口主,由中中,圭土,由凹凸,由由中,由目圭,克工</span><br></pre></td></tr></tbody></table></figure><blockquote><p>将其转换为数字，并用ASCII码解开</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">明文：102 108 97 103 123 122 107 122 95 100 112 109 109 54</span><br><span class="line">flag{zkz_dpm6}</span><br></pre></td></tr></tbody></table></figure><h2 id="（13）杂项13：佛说"><a href="#（13）杂项13：佛说" class="headerlink" title="（13）杂项13：佛说"></a>（13）杂项13：佛说</h2><p><img src="https://pic.imgdb.cn/item/66681165d9c307b7e9d315a4.png"></p><blockquote><p>网上查看其为与佛论禅，那就寻找工具解密</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密文：佛曰：諳娑蒙罰世那真耶除梵沙缽能蒙切一怯南缽爍皤若佛涅無侄殿依缽以俱耨皤大缽若道他怯數等侄即喝至能楞怯伊奢阿諳利哆跋遮知智罰悉缽伽即所遠那等多</span><br></pre></td></tr></tbody></table></figure><blockquote><p>解密工具：<a href="https://ctf.bugku.com/tool/todousharp">与佛论禅密码 - Bugku CTF</a></p></blockquote><p><img src="https://pic.imgdb.cn/item/6668112dd9c307b7e9d27154.png"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{zkaq_fochan}</span><br></pre></td></tr></tbody></table></figure><h2 id="（14）杂项14-奇怪的Base加密"><a href="#（14）杂项14-奇怪的Base加密" class="headerlink" title="（14）杂项14:奇怪的Base加密"></a>（14）杂项14:奇怪的Base加密</h2><p><img src="https://pic.imgdb.cn/item/666811c2d9c307b7e9d3e30f.png"></p><blockquote><p>下载文件，这么长的一段Base,还有;base64,这个关键词，这个一定是图片Base64加密，直接解密就可以了</p><p>加解密平台：<a href="https://tool.chinaz.com/tools/imgtobase/">https://tool.chinaz.com/tools/imgtobase/</a></p><p>记得加一个头部图片的格式：data:image/jpg；</p></blockquote><p><img src="https://pic.imgdb.cn/item/6668137bd9c307b7e9d86cea.png"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{base64_tupian_a}</span><br></pre></td></tr></tbody></table></figure><h2 id="（15）杂项15：跳舞小人"><a href="#（15）杂项15：跳舞小人" class="headerlink" title="（15）杂项15：跳舞小人"></a>（15）杂项15：跳舞小人</h2><p><img src="https://pic.imgdb.cn/item/666813f5d9c307b7e9d9652a.png"></p><blockquote><p>跳舞小人中明显有一个二维码，截图发现少了一块，补上直接扫描</p></blockquote><p>得到flag</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{GC-ACUID}</span><br></pre></td></tr></tbody></table></figure><h2 id="（16）杂项16：神秘图片"><a href="#（16）杂项16：神秘图片" class="headerlink" title="（16）杂项16：神秘图片"></a>（16）杂项16：神秘图片</h2><p><img src="https://pic.imgdb.cn/item/666815bbd9c307b7e9dbb43c.png"></p><blockquote><p>下载文件，然后右键属性，看到里面的照相机镜头信息</p></blockquote><img src="https://pic.imgdb.cn/item/66681627d9c307b7e9dc292f.png" style="zoom:67%;"><p>得到flag</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{ctf_tupian_666}</span><br></pre></td></tr></tbody></table></figure><h2 id="（17）杂项17-可达鸭"><a href="#（17）杂项17-可达鸭" class="headerlink" title="（17）杂项17:可达鸭"></a>（17）杂项17:可达鸭</h2><p><img src="https://pic.imgdb.cn/item/6668171bd9c307b7e9dd3a34.png"></p><blockquote><p>看到图片明显能感觉到显示不全，下载发现是一个png图片</p></blockquote><p><img src="https://pic.imgdb.cn/item/66681fbcd9c307b7e9e57207.png"></p><blockquote><p>自然就想到利用16进制编辑器打开图片，到找IHDR调整大小，发现后面的flag，可以使用网上的16进制编辑器，把图片长度更改；工具：<a href="https://hexed.it/">HexEd.it — 基于浏览器的十六进制编辑器</a></p></blockquote><p><img src="https://pic.imgdb.cn/item/66682061d9c307b7e9e74795.png"></p><p>更改为：</p><p><img src="https://pic.imgdb.cn/item/66682085d9c307b7e9e7996d.png"></p><p>得到图片：</p><img src="https://pic.imgdb.cn/item/666820bad9c307b7e9e7d4ea.png" style="zoom:50%;"><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{ke-da-ya!}</span><br></pre></td></tr></tbody></table></figure><h2 id="（18）杂项18：一组神秘的图片"><a href="#（18）杂项18：一组神秘的图片" class="headerlink" title="（18）杂项18：一组神秘的图片"></a>（18）杂项18：一组神秘的图片</h2><p><img src="https://pic.imgdb.cn/item/66682115d9c307b7e9e85cc0.png"></p><blockquote><p>下载压缩包，解压之后得到一些黑白图，这个图片只有黑和白两种，有点像二进制中的0和1，尝试把白色换成0，黑色换成1，得出一串二进制</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">二进制：01100110011011000110000101100111011110110110011100101101011000110110011101111101</span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/66682247d9c307b7e9ea346c.png"></p><blockquote><p>将其转换为ASCII码，工具：<a href="https://coding.tools/cn/binary-to-text">2进制到ASCII字符串在线转换工具 - Coding.Tools</a></p></blockquote><p><img src="https://pic.imgdb.cn/item/666822f5d9c307b7e9eae9a2.png"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{g-cg}</span><br></pre></td></tr></tbody></table></figure><h2 id="（19）杂项19：神奇的压缩包加密"><a href="#（19）杂项19：神奇的压缩包加密" class="headerlink" title="（19）杂项19：神奇的压缩包加密"></a>（19）杂项19：神奇的压缩包加密</h2><p><img src="https://pic.imgdb.cn/item/66682384d9c307b7e9eb7a3d.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开创博客</title>
      <link href="/2024/05/20/kai-chuang-bo-ke/"/>
      <url>/2024/05/20/kai-chuang-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="欢迎来到-xmhhmxblog！"><a href="#欢迎来到-xmhhmxblog！" class="headerlink" title="欢迎来到 xmhhmxblog！"></a>欢迎来到 xmhhmxblog！</h1>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
