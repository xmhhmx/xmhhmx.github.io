<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>封神台高校专区练习</title>
      <link href="/2024/05/29/feng-shen-tai-gao-xiao-zhuan-qu-lian-xi/"/>
      <url>/2024/05/29/feng-shen-tai-gao-xiao-zhuan-qu-lian-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="封神台高校CTF练习（Misc入门靶场）"><a href="#封神台高校CTF练习（Misc入门靶场）" class="headerlink" title="封神台高校CTF练习（Misc入门靶场）"></a>封神台高校CTF练习（Misc入门靶场）</h1><hr><p><a href="https://hack.zkaq.cn/">封神台练习平台</a></p><h2 id="用到的工具平台"><a href="#用到的工具平台" class="headerlink" title="==用到的工具平台=="></a>==用到的工具平台==</h2><p>Unicode加解密：<a href="https://www.toolhelper.cn/EncodeDecode/UnicodeChinese">https://www.toolhelper.cn/EncodeDecode/UnicodeChinese</a><br>RC4加解密：<a href="https://www.lddgo.net/encrypt/rc4">在线RC4加密解密 (lddgo.net)</a><br>MD5加解密：<a href="https://www.cmd5.com/default.aspx">md5在线解密破解,md5解密加密 (cmd5.com)</a></p><h2 id="第一关-杂项1-图片隐写"><a href="#第一关-杂项1-图片隐写" class="headerlink" title="第一关 杂项1 图片隐写"></a>第一关 杂项1 图片隐写</h2><p> <img src="https://pic.imgdb.cn/item/665715c4d9c307b7e93f60fd.png"></p><ul><li><p>步骤</p><blockquote><p>将图片下载到本地，并且用文本文档（.txt）打开并查看源码</p></blockquote><p>  <img src="https://pic.imgdb.cn/item/66571ca6d9c307b7e9485bcc.png" alt="图片"></p><blockquote><p>查看源码，发现有Unicode码</p></blockquote>  <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#107;&amp;#101;&amp;#121;&amp;#123;&amp;#122;&amp;#45;&amp;#110;&amp;#115;&amp;#100;&amp;#105;&amp;#117;&amp;#97;&amp;#125;</span><br></pre></td></tr></tbody></table></figure><blockquote><p>在网上搜一个Unicode码解码工具（<a href="https://www.toolhelper.cn/EncodeDecode/UnicodeChinese">Unicode与中文 编码/解码 - 锤子在线工具 (toolhelper.cn)</a> ，并解码</p></blockquote><p>  <img src="https://pic.imgdb.cn/item/66571e63d9c307b7e94a21a2.png" alt="解码"></p><blockquote><p>得到flag</p></blockquote>  <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key{z-nsdiua}</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="第二关-杂项2-密文在这里-看看你是否能解开"><a href="#第二关-杂项2-密文在这里-看看你是否能解开" class="headerlink" title="第二关 杂项2 密文在这里,看看你是否能解开"></a>第二关 杂项2 密文在这里,看看你是否能解开</h2><p><img src="https://pic.imgdb.cn/item/66572105d9c307b7e94cc375.png"></p><p>==RC4原理：==</p><p>RC4（Rivest Cipher 4）是一种流密码（stream cipher）算法，用于加密和解密数据。它由Ron Rivest设计并于1987年发布。RC4算法的核心是通过对称密钥生成伪随机位流（pseudo-random stream），然后将明文与该位流进行抑或（XOR）运算来实现加密和解密。</p><p>具体来说，RC4算法包括以下步骤：</p><ol><li><strong>密钥调度算法（Key Scheduling Algorithm，KSA）</strong>：根据输入的密钥，生成一个密钥调度表（S-box），用于后续的伪随机位流生成。</li><li><strong>伪随机生成算法（Pseudo-Random Generation Algorithm，PRGA）</strong>：利用密钥调度表生成一个伪随机位流，该位流的元素会被用作加密过程中的“密钥流”。</li><li><strong>加密/解密</strong>：将明文与伪随机位流进行逐位的抑或运算，以实现加密或解密操作。</li></ol><p>在使用RC4算法时，需要注意以下几点：</p><ul><li>密钥的选择和管理非常重要，弱密钥会导致加密的不安全性。</li><li>加密和解密使用相同的密钥。</li><li>在实际应用中，通常需要引入初始化向量（Initialization Vector，IV）来提高安全性。</li></ul><p>总的来说，RC4算法是一种快速且简单的加密算法，但由于存在一些安全性方面的问题，如密钥漏洞和偏差等，现在已不推荐作为加密标准使用。</p><ul><li><p>步骤：</p><blockquote><p>RC4解密是需要密钥的，所以需要寻找密钥，题中一个声音在耳边响起，看一下自己的键盘，他好像在组成某种神秘的组合（rtygcvb ，ujmko，ujmko），跟着他的字母在键盘上对一下，于是前两个组成了两个字母</p></blockquote></li></ul><p><img src="https://pic.imgdb.cn/item/665723b9d9c307b7e94fbc8b.jpg"></p><blockquote><p>重复敲击两次，那么猜测密钥为zvvzvv,并在网上找一个RC4解密工具解密（<a href="https://www.lddgo.net/encrypt/rc4">在线RC4加密解密 (lddgo.net)</a>）</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密文：M6UUSlt6rxWO328Kez8xXCMd</span><br></pre></td></tr></tbody></table></figure><blockquote><p>输入密钥，将字符集选择为UTF-8，输入格式为base64，输出格式为字符串（string）</p></blockquote><p><img src="https://pic.imgdb.cn/item/665725e7d9c307b7e9521dbe.png" alt="RC4解密"></p><blockquote><p>得到flag</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key{zkz-good-kkey}</span><br></pre></td></tr></tbody></table></figure><h2 id="第三关-杂项3-一段特殊的ascii密文"><a href="#第三关-杂项3-一段特殊的ascii密文" class="headerlink" title="第三关 杂项3 一段特殊的ascii密文"></a>第三关 杂项3 一段特殊的ascii密文</h2><p><img src="https://pic.imgdb.cn/item/665726bdd9c307b7e953599f.png"></p><ul><li>步骤：</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">83,121,110,116,71,115,121,110,116,136,135,120,135,108,110,126,115,112,63,61,63,62,108,67,63,69,108,76,76,76,76,138,90,113,66,71,112,110,66,62,62,67,112,112,66,111,112,67,113,63,110,114,69,66,65,110,111,111,113,68,61,63,112,69,68,68,68</span><br></pre></td></tr></tbody></table></figure><blockquote><p>首先，猜测flag是以“flag”开头的，且121,110,116三个数在2，3，4位置和在7，8，9位置都在，那么先将flag转换为ascii码，为102，108，97，103，</p><p>102（+6）108（-11）97（+6）103</p><p>121（-11）110（+6）116</p><p>那么可以看出108，97，103和121，110，116之间的差距是相同的，那么121-108=13，将所有数字-13</p></blockquote><blockquote><p>那么写一个python代码，将这些整数转化为ascii码</p></blockquote><p><img src="https://pic.imgdb.cn/item/66572bf9d9c307b7e95b1749.png" alt="代码运行图"></p><p>代码：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">83</span>,<span class="number">121</span>,<span class="number">110</span>,<span class="number">116</span>,<span class="number">71</span>,<span class="number">115</span>,<span class="number">121</span>,<span class="number">110</span>,<span class="number">116</span>,<span class="number">136</span>,<span class="number">135</span>,<span class="number">120</span>,<span class="number">135</span>,</span><br><span class="line">   <span class="number">108</span>,<span class="number">110</span>,<span class="number">126</span>,<span class="number">115</span>,<span class="number">112</span>,<span class="number">63</span>,<span class="number">61</span>,<span class="number">63</span>,<span class="number">62</span>,<span class="number">108</span>,<span class="number">67</span>,<span class="number">63</span>,<span class="number">69</span>,<span class="number">108</span>,</span><br><span class="line">   <span class="number">76</span>,<span class="number">76</span>,<span class="number">76</span>,<span class="number">76</span>,<span class="number">138</span>,<span class="number">90</span>,<span class="number">113</span>,<span class="number">66</span>,<span class="number">71</span>,<span class="number">112</span>,<span class="number">110</span>,<span class="number">66</span>,<span class="number">62</span>,<span class="number">62</span>,<span class="number">67</span>,</span><br><span class="line">   <span class="number">112</span>,<span class="number">112</span>,<span class="number">66</span>,<span class="number">111</span>,<span class="number">112</span>,<span class="number">67</span>,<span class="number">113</span>,<span class="number">63</span>,<span class="number">110</span>,<span class="number">114</span>,<span class="number">69</span>,<span class="number">66</span>,<span class="number">65</span>,<span class="number">110</span>,</span><br><span class="line">   <span class="number">111</span>,<span class="number">111</span>,<span class="number">113</span>,<span class="number">68</span>,<span class="number">61</span>,<span class="number">63</span>,<span class="number">112</span>,<span class="number">69</span>,<span class="number">68</span>,<span class="number">68</span>,<span class="number">68</span>]</span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    j = <span class="built_in">chr</span>(i-<span class="number">13</span>)</span><br><span class="line">    <span class="comment"># chr()函数用于返回指定整数对应的ASCII字符</span></span><br><span class="line">    flag=flag+j</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><blockquote><p>得到部分的flag，md5值其实最后还有个d，这个d其实也是可以跑出来的</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Flag:flag{zkz_aqfc2021_628_????}Md5:ca5116cc5bc6d2ae854abbd702c8777d</span><br></pre></td></tr></tbody></table></figure><blockquote><p>这里的一个思路就是尝试用md5解密工具（<a href="https://www.cmd5.com/default.aspx">md5在线解密破解,md5解密加密 (cmd5.com)</a>），但是是不成功的，因为数据源是无穷尽的，而 MD5密文是有限的。</p><p>那么这里我就查看了平台的解题思路：标准的md5碰撞，写一个碰撞脚本（碰撞需要一段时间，耐心等待）</p></blockquote><p><img src="https://pic.imgdb.cn/item/66573179d9c307b7e961bb4b.png" alt="MD5碰撞脚本运行"></p><p>代码：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">flag_md5 = 'ca5116cc5bc6d2ae854abbd702c8777d'</span><br><span class="line">strs = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&amp;()" \</span><br><span class="line">       "*+,-./:;&lt;=&gt;?@[\]^_`{|}~ "</span><br><span class="line">for a in strs:</span><br><span class="line">    for b in strs:</span><br><span class="line">        for c in strs:</span><br><span class="line">            for d in strs:</span><br><span class="line">                md5 = hashlib.md5()</span><br><span class="line">                flag = 'flag{zkz_aqfc2021_628_' +str(a)+str(b)+str(c)+str(d)+'}'</span><br><span class="line">                md5.update(flag.encode())</span><br><span class="line">                if md5.hexdigest() == flag_md5:</span><br><span class="line">                    print(flag)</span><br></pre></td></tr></tbody></table></figure><blockquote><p>得到flag</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{zkz_aqfc2021_628_zxcv}</span><br></pre></td></tr></tbody></table></figure><h3 id="学习资料补充"><a href="#学习资料补充" class="headerlink" title="学习资料补充"></a>学习资料补充</h3><p>==hashlib库==</p><ul><li><p>hashlib库是Python的一个标准库，用于提供哈希算法。其中包含多种哈希算法，如MD5、SHA-1、SHA-256等。</p></li><li><p>MD5 (Message Digest Algorithm 5) 是一种广泛使用的哈希算法，用于将任意长度的输入数据生成一个128位的哈希值。它具有以下特点：</p><ol><li><p>不可逆：无法从生成的哈希值还原出原始数据。</p></li><li><p>唯一性：不同的输入数据生成的哈希值几乎不会相同。</p></li><li><p>高效性：计算速度快，适合用于检查数据完整性。</p></li></ol></li></ul><p>在Python中，可以使用<code>hashlib</code>库中的<code>md5()</code>函数来计算数据的MD5哈希值，示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">data = <span class="string">'Hello, World!'</span></span><br><span class="line">md5_hash = hashlib.md5(data).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"MD5 hash value:"</span>, md5_hash)</span><br></pre></td></tr></tbody></table></figure><p>这段代码会计算字符串<code>'Hello, World!'</code>的MD5哈希值，并打印出该哈希值。</p><p><code>hexdigest()</code>是<code>hashlib</code>库中<code>hash</code>对象的一个方法，用于获取以十六进制表示的哈希值。在计算完哈希值之后，可以使用<code>hexdigest()</code>方法将哈希值转换为字符串形式，方便输出或者存储。这样可以避免直接输出二进制形式的哈希值，使得结果更易读和使用。</p><h2 id="第四关-杂项4-一个加密的xlsx表格"><a href="#第四关-杂项4-一个加密的xlsx表格" class="headerlink" title="第四关 杂项4 一个加密的xlsx表格"></a>第四关 杂项4 一个加密的xlsx表格</h2><p><img src="https://pic.imgdb.cn/item/665734d3d9c307b7e96603a0.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/05/20/hello-world/"/>
      <url>/2024/05/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
